Variables:
Packed Array - (Ordered from TL)AList of BLists of Pixels, Each BList represents a row of the bitmap, Each pixel is represented by a byte[4] where each byte is a value of 0-255 for ARGB
_bitmaparray - Giant Unweildy byte array of each byte of the bitmap 
_bitmapheader - (Section of _bitmaparray)
_bitmappixelarray - (Section of _bitmaparray) The byte[] of just the pixel data but in reverse order ie bottum up
argument for LowRes must be a power of two not a value. eg Lowres(n) = SF 2^n

Standard for parsing through the pixels
            foreach (List<byte[]> row in _packedarray)
            {
                foreach (byte[] pxl in row)
                {
                }
            }

		noderow.Add(new Node(location[1], location[0], GCost(location, _start), HCost(location, _stop), pxl[1] + pxl[2] + pxl[3]));

		                List<Node> noderow = new List<Node> { };
                if (input.IndexOf(row) < _maxheight | input.IndexOf(row) > _minwidth)
                {
                    foreach (byte[] pxl in row)
                    {
                        if (row.IndexOf(pxl) < _maxwidth | row.IndexOf(pxl) > _minwidth)
                        {
                            List<int> location = new List<int> { input.IndexOf(row), row.IndexOf(pxl) };
                            _Nodesopen.Add(new Node(location[1], location[0], GCost(location, _start), HCost(location, _stop), pxl[1] + pxl[2] + pxl[3]));
                        }
                    }
                }